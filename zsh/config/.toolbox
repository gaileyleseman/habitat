##################################################################
#                        TOOLBOX                                 #
##################################################################

function create_venv() {
  if [ -n "$VIRTUAL_ENV" ]; then
    echo "Currently in virtual environment \"$VIRTUAL_ENV\". Deactivating..."
    deactivate
  fi

  if [ -d "venv" ]; then
    read "answer?A venv folder already exists. Do you want to remove it and create a new one? (y/n) "
    if [ "$answer" != "y" ]; then
      echo "Exiting without creating a new virtual environment."
      return
    else
      echo "Removing existing virtual environment..."
      rm -rf venv
    fi
  fi

  echo "Creating new virtual environment..."
  python3 -m venv venv

  echo "Activating virtual environment..."
  source venv/bin/activate

  echo "Upgrading pip..."
  python3 -m pip install --upgrade pip

  if [ -f "requirements.txt" ]; then
    echo "Installing requirements from requirements.txt..."
    python3 -m pip install -r requirements.txt
  fi
}

function install_python() {
    local version=${1:-3.12}  # Default to 3.12

    if ! [[ $version =~ ^3\. ]]; then
        echo "That version does not work, the indicated version must start with '3.'"
        return
    fi

    # Add DeadSnakes PPA
    sudo add-apt-repository ppa:deadsnakes/ppa -y

    # Update package lists
    sudo apt-get update -qq

    # Install Python and venv
    sudo apt-get install -qq -y \
        python"$version" \
        python"$version"-venv

    echo "Python $version installed successfully!"
    # Add to the alternatives system
    if update-alternatives --query python | grep -q "python$version"; then
      return
    else
      echo "Adding Python $version to the alternatives system. Use 'update_python' to change the default version"
      sudo update-alternatives --install /usr/bin/python python /usr/bin/python"$version" 1
      sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python"$version" 1
    fi
}


function update_python(){
  echo_style "Available Python versions:" white
  update-alternatives --list python3

  read -p "Which version of Python do you want to use? (e.g. 3.10) " version
  sudo update-alternatives --set python /usr/bin/python"$version"
  sudo update-alternatives --set python3 /usr/bin/python"$version"

  new_version=$(python --version)
  echo_style "Python version changed to $new_version"
}

function pre-commit-copy-habitat(){
  curl -o .pre-commit-config.yaml https://raw.githubusercontent.com/gaileyleseman/habitat/main/.pre-commit-config.yaml
}

function echo_style() {
    local msg="$1"
    local color="$2"
    local style="${3:-normal}"

    case "$color:$style" in
        black:bold) echo -e "\033[30;1m$msg\033[0m" ;;
        red:bold) echo -e "\033[31;1m$msg\033[0m" ;;
        green:bold) echo -e "\033[32;1m$msg\033[0m" ;;
        yellow:bold) echo -e "\033[33;1m$msg\033[0m" ;;
        blue:bold) echo -e "\033[34;1m$msg\033[0m" ;;
        magenta:bold) echo -e "\033[35;1m$msg\033[0m" ;;
        cyan:bold) echo -e "\033[36;1m$msg\033[0m" ;;
        white:bold) echo -e "\033[1m$msg\033[0m" ;;
        gray:bold) echo -e "\033[37;1m$msg\033[0m" ;;
        black:dim) echo -e "\033[30;2m$msg\033[0m" ;;
        red:dim) echo -e "\033[31;2m$msg\033[0m" ;;
        green:dim) echo -e "\033[32;2m$msg\033[0m" ;;
        yellow:dim) echo -e "\033[33;2m$msg\033[0m" ;;
        blue:dim) echo -e "\033[34;2m$msg\033[0m" ;;
        magenta:dim) echo -e "\033[35;2m$msg\033[0m" ;;
        cyan:dim) echo -e "\033[36;2m$msg\033[0m" ;;
        white:dim) echo -e "\033[2m$msg\033[0m" ;;
        gray:dim) echo -e "\033[37;2m$msg\033[0m" ;;
        black:*) echo -e "\033[30m$msg\033[0m" ;;
        red:*) echo -e "\033[31m$msg\033[0m" ;;
        green:*) echo -e "\033[32m$msg\033[0m" ;;
        yellow:*) echo -e "\033[33m$msg\033[0m" ;;
        blue:*) echo -e "\033[34m$msg\033[0m" ;;
        magenta:*) echo -e "\033[35m$msg\033[0m" ;;
        cyan:*) echo -e "\033[36m$msg\033[0m" ;;
        gray:*) echo -e "\033[37m$msg\033[0m" ;;
        white:*) echo -e "$msg" ;;
        *) echo "$msg" ;;
    esac
}
